name: master -> master-ci -> release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:

  pull_request:
    runs-on: ubuntu-latest
    name: start master-ci
    steps:
    - uses: actions/checkout@master

    - name: Wait on check
      uses: fountainhead/action-wait-for-check@v1.0.0
      id: wait-for-lint

      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: lint
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Create Pull Request

      if: steps.wait-for-lint.outputs.conclusion == 'success'
      uses: repo-sync/pull-request@v2
      with:
        destination_branch: "master-ci"
        github_token: ${{ secrets.GITHUB_TOKEN }}

  # master -> master-ci
  merge:
    runs-on: ubuntu-latest
    name: Wait For Build To Merge
    steps:
    - uses: actions/checkout@master

    - name: Wait for Build
      uses: fountainhead/action-wait-for-check@v1.0.0
      id: wait-for-build

      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: build
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Merge master -> master-ci

      if: steps.wait-for-build.outputs.conclusion == 'success'
      uses: devmasx/merge-branch@v1.3.1
      with:
        type: now
        target_branch: master-ci
        github_token: ${{ secrets.GITHUB_TOKEN }}

  # master-ci -> release
  sanitize:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: release
        fetch-depth: 0


    - name: Wait for Merge
      uses: fountainhead/action-wait-for-check@v1.0.0
      id: wait-for-merge

      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: merge
        ref: ${{ github.event.pull_request.head.sha || github.sha }}


    - name: Set DEBUG False
      if: steps.wait-for-merge.outputs.conclusion == 'success'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

        git checkout master-ci
        git pull

        git checkout release
        git merge --squash master-ci --strategy-option theirs
        sed -i -e 's/DEBUG = True/DEBUG = False/g' brickbox/settings.py
        git add brickbox/settings.py
        git commit -m "Set DEBUG False"
        git push
